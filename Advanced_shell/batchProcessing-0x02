#!/bin/bash

# List of Pokémon to fetch
POKEMON_LIST=("bulbasaur" "ivysaur" "venusaur" "charmander" "charmeleon")

# Function to fetch Pokémon data with retry logic
fetch_pokemon() {
    local pokemon=$1
    local attempts=0
    local max_attempts=3
    local success=false

    while [ $attempts -lt $max_attempts ]; do
        attempts=$((attempts + 1))
        echo "Fetching data for $pokemon... (Attempt $attempts)"

        STATUS_CODE=$(curl -s -o "${pokemon}.json" -w "%{http_code}" "https://pokeapi.co/api/v2/pokemon/$pokemon")

        if [ "$STATUS_CODE" -eq 200 ]; then
            echo "Saved data to ${pokemon}.json"
            success=true
            break
        else
            echo "Attempt $attempts failed for $pokemon (HTTP $STATUS_CODE)"
            sleep 2  # wait before retrying
        fi
    done

    if [ "$success" = false ]; then
        echo "Failed to fetch data for $pokemon after $max_attempts attempts" >> errors.txt
        rm -f "${pokemon}.json"
    fi
}

# Loop through each Pokémon and fetch data
for pokemon in "${POKEMON_LIST[@]}"; do
    fetch_pokemon "$pokemon"
    sleep 1  # delay between Pokémon to avoid API rate limiting
done
